version: '3.8'

services:
  pix-db:
    hostname: pix-db
    container_name: pix-db
    image: postgres
    restart: always
    volumes:
      - /pix-db/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: admin@1234
      POSTGRES_USER: pix-admin
      POSTGRES_DB: pix-db
    ports:
      - "5432:5432"
    network_mode: host

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: pix-zookeeper
    volumes:
      - pix-zoo-data:/var/lib/zookeeper/data
      - pix-zoo-log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    hostname: pix-kafka
    image: confluentinc/cp-kafka:7.2.1
    container_name: pix-kafka
    volumes:
      - pix-kafka-data:/var/lib/kafka/data
      - pix-kafka-log:/var/lib/kafka/log
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    
#  rabbitmq:
#    container_name: rabbitmq
#    image: rabbitmq:3-management
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    hostname: my-rabbit
#    volumes:
#      - /rabbit/data:/var/lib/rabbitmq
#
  pix-producer-api:
    build: ./pix-producer-api/.
    image: pix-producer-api
    container_name: pix-producer-api
    depends_on:
      - pix-db
      - zookeeper
      - kafka
    network_mode: host

  pix-consumer-api:
    build: ./pix-consumer-api/.
    image: pix-consumer-api
    container_name: pix-consumer-api
    depends_on:
      - pix-producer-api
    network_mode: host

volumes:
  pix-db:
  pix-kafka-data:
  pix-kafka-log:
  pix-zoo-data:
  pix-zoo-log: